<div class="box">
  <div class="gridnew">
    <h1>Newest release</h1>
    <div class="grid-circle">
      <div class="circle circle1"></div>
      <div class="circle circle2"></div>
      <div class="circle circle3"></div>
    </div>
  </div>
  <div class="box2">
    <img class="imgpp" src="../../public/img/ppnewjeans.png" alt="" />
    <h2>SuperShy</h2>
    <h3>New Jeans</h3>
    <img id="play" src="../../public/img/placeholder.png" alt="" />
    <div class="timerpermanent">
      <div id="timer"></div>
    </div>
  </div>
</div>

<style>
  .box {
    background: #d4fac2;
    border: 3px solid #c5117d;
    border-radius: 25px;
    height: 200px;
    width: 450px;
  }

  .box2 {
    background: white;
    border: 3px solid #c5117d;
    border-radius: 25px;
    height: 150px;
    width: 400px;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr;
    margin: 0 0 0 20px;
  }

  .gridnew {
    display: flex;
  }

  .imgpp {
    grid-column: 1;
    grid-row: 1 / 3;
    border-radius: 20px;
    margin: 10px 0 10px 10px;
    height: auto;
    width: 90%;
  }

  h1 {
    margin: 0 0 0 20px;
  }
  h3 {
    color: #ff60bb;
    grid-column: 2;
    grid-row: 2;
    margin: 0 0 0 15px;
  }
  h2 {
    grid-column: 2;
    grid-row: 1;
    margin: 20px 0 0 15px;
  }

  #play {
    grid-column: 3;
    grid-row: 1 / 3;
    transform: rotate(30deg);
    width: 50%;
    height: auto;
    margin: 40px 0 0 40px;
  }

  .grid-circle {
    display: flex;
    column-gap: 3px;
    margin: 15px 0 0 170px;
  }

  .circle {
    width: 15px;
    height: 15px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 3px solid #c5117d;
  }

  .circle1 {
    background-color: #b1fef5; /* Color for the first circle */
  }

  .circle2 {
    background-color: #c8ffa7; /* Color for the second circle */
  }

  .circle3 {
    background-color: #ff6f9c; /* Color for the third circle */
  }

  .timerpermanent {
    background-color: #faeeff;

    width: 100px;
    height: 4px;
    grid-row: 3;
    grid-column: 2 / span 4;
    margin-left: 17px;
  }

  #timer {
    grid-row: 3;
    grid-column: 2 / 4;
    background-color: #ff60bb;
    width: 100px;
    height: 4px;
    animation-name: timer_kf;
    animation-duration: 15s;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
    animation-iteration-count: 1;
    animation-play-state: paused;
  }

  @keyframes timer_kf {
    0% {
      clip-path: inset(0 100% 0 0);
    }
    100% {
      clip-path: inset(0 0 0);
    }
  }

  /* WEB */

  @media only screen and (min-width: 1024px) {
    .box {
      width: 950px;
    }
    .box2 {
      width: 900px;
    }

    #play {
      width: 60px;
      margin: 50px 0 0 160px;
    }

    .imgpp {
      width: 120px;
    }

    h2 {
      font-size: 40px;
      margin: 20px 0 0 -130px;
    }

    h3 {
      margin: 0 0 0 -130px;
    }

    .timerpermanent {
      width: 217px;
      margin-left: -130px;
    }

    .grid-circle {
      margin: 15px 0 0 650px;
    }
  }
</style>
<script>
  let audioelement = new Audio("../../public/song/clap.wav");
  let masterplay = document.getElementById("play");
  let timerElement = document.getElementById("timer");

  // Set initial animation duration
  timerElement.style.animationDuration = audioelement.duration + "s";

  // Event listener for the play button
  masterplay.addEventListener("click", () => {
    if (audioelement.paused) {
      // If audio is paused, play it and start the timer animation
      audioelement.play();
      timerElement.style.animationPlayState = "running";
    } else {
      // If audio is playing, pause it and pause the timer animation
      audioelement.pause();
      timerElement.style.animationPlayState = "paused";
    }
  });

  // Event listener for when the audio ends
  audioelement.addEventListener("ended", () => {
    // Pause the audio and reset the timer animation to the beginning
    audioelement.pause();
    timerElement.style.animationPlayState = "paused";
    timerElement.style.animation = "none";
    void timerElement.offsetWidth; // Trigger reflow
    timerElement.style.animation = null;
  });
</script>
